package metalign.hierarchy.lpcfg;

import java.io.Serializable;

/**
 * A <code>MetricalLpcfgTree</code> represents the tree structure generated by a
 * metrical lpcfg for a single measure of a single voice of a song. The head of the
 * tree is stored in {@link #measure}.
 * 
 * @author Andrew McLeod - 22 April, 2016
 */
public class MetricalLpcfgTree implements Serializable {
	/**
	 * Version 1
	 */
	private static final long serialVersionUID = 1L;
	
	/**
	 * The measure at the head of this tree.
	 */
	private final MetricalLpcfgMeasure measure;
	
	/**
	 * Create a new tree with the given measure at its head.
	 * 
	 * @param measure {@link #measure}
	 */
	public MetricalLpcfgTree(MetricalLpcfgMeasure measure) {
		this.measure = measure;
	}
	
	/**
	 * Get if this tree is empty or not.
	 * 
	 * @return True if this tree contains no notes. False otherwise.
	 */
	public boolean isEmpty() {
		return measure.isEmpty();
	}
	
	/**
	 * Get if this tree's first quantum is a rest or not.
	 * 
	 * @return True if this tree's first quantum is a REST. False otherwise.
	 */
	public boolean startsWithRest() {
		return measure.startsWithRest();
	}

	/**
	 * Get the measure node which is at the head of this tree.
	 * 
	 * @return {@link #measure}
	 */
	public MetricalLpcfgMeasure getMeasure() {
		return measure;
	}
	
	@Override
	public boolean equals(Object o) {
		if (!(o instanceof MetricalLpcfgTree)) {
			return false;
		}
		
		MetricalLpcfgTree tree = (MetricalLpcfgTree) o;
		
		return tree.measure.equals(measure);
	}
	
	@Override
	public String toString() {
		return measure.toString();
	}

	/**
	 * Get the pretty, recursive version of this tree with the given indention String.
	 * 
	 * @param tab The String used to indent tree levels.
	 * @return The pretty recursive version of this tree.
	 */
	public String toStringPretty(String tab) {
		return measure.toStringPretty(0, tab);
	}
}